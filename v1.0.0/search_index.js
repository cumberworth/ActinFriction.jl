var documenterSearchIndex = {"docs":
[{"location":"#ActinFriction","page":"Home","title":"ActinFriction","text":"","category":"section"},{"location":"#README","page":"Home","title":"README","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"ActinFriction","category":"page"},{"location":"#ActinFriction","page":"Home","title":"ActinFriction","text":"Actin rings dynamics simulation package\n\nA Julia package for simulating the dynamics of passively crosslinked actin rings.\n\nRepository\n\nDocumentation\n\nThis package allows the SDEs described in Ref. 1 to be solved, and provides methods for directly calculating the friction coefficients described in the same paper.\n\nInstallation\n\nThe package can be installed by starting the Julia REPL, typing ] to enter package mode, and running\n\nadd ActinFriction\n\nto install from the General registry, or by running\n\nadd https://github.com/cumberworth/ActinFriction.jl\n\nto install directly from the development repository.\n\nA related python package, actinfrictionpy, includes code for analyzing and plotting the output from these ...\n\nReferences\n\n[1] A. Cumberworth and P. R. ten Wolde, Constriction of actin rings by passive crosslinkers, arXiv:2203.04260 [physics.bio-ph].\n\nLinks\n\nJulia programming language\n\nPlotting package\n\nReplication package Ref. 1\n\nR_to_lambda\nRingParams\nbending_force\ncondensation_force\nentropic_force\nequilibrium_occupancy\nequilibrium_ring_radius\nforce_L_to_R\nfree_energy_barrier_Nd_exact\nfree_energy_barrier_Nd_exp\nfree_energy_barrier_cX\nfriction_coefficient_Nd_exact\nfriction_coefficient_Nd_exp\nfriction_coefficient_cX\nkramers_r0\nl_to_lambda\nlambda_to_R\nlambda_to_l\nsavename\nsolve_and_write_ring_Nd_contin_exp\nsolve_and_write_ring_Nd_contin_exp_noise\nsolve_and_write_ring_Nd_discrete_exact\nsolve_and_write_ring_Nd_discrete_exact_noise\nsolve_and_write_ring_Nd_discrete_exp\nsolve_and_write_ring_Nd_discrete_exp_noise\nsolve_and_write_ring_cX\nsolve_and_write_ring_cX_noise\n\n\n\n\n\n","category":"module"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [ActinFriction]\nOrder = [:type, :function]\nPrivate = false","category":"page"},{"location":"#ActinFriction.RingParams","page":"Home","title":"ActinFriction.RingParams","text":"k01::Float64: Per site rate constant of initial crosslinker binding (s^-1)\nr01::Float64: Per site rate of initial crosslinker binding (M^-1 s^-1)\nr10::Float64: Per site rate (constant) of singly bound crosslinker unbinding (s^-1)\nr12::Float64: Per site rate (constant) of singly bound crosslinker doubly binding (s^-1)\nr21::Float64: Per site rate (constant) of doubly bound crosslinker unbinding one head (s^-1)\ndeltas::Float64: Spacing between binding sites on a filament (m)\ndeltad::Float64: Spacing for doubly bound crosslinkers (m)\nk::Float64: Spring constant of crosslinker (N m^-1)\nT::Float64: Temperature (K)\nNf::Int64: Number of filaments\nNsca::Int64: Number of scaffold filaments\nEI::Float64:  Bending rigidity (N m^2)\nLf::Float64: Filament length (m)\nr0::Float64: Jump rate prefactor\nDf::Float64: Actin filament diameter (m)\neta::Float64: Viscosity of fluid (kg m^-1 s^-1)\nDs::Float64: Diffusion coefficient of singly bound crosslinkers on filament (m^2 s^-1)\nKsD::Float64: Dissociation constant for single crosslinker binding from solution (M)\nKdD::Float64: Dissociation constant for double crosslinker binding from solution (M)\ncX::Float64: Crosslinker concentration (M)\nn::Float64: Number of overlaps moving collectively during constriction\ntend::Float64: Duration of dynamics (s)\nlambda0::Float64: Initial lambda\nNdtot0::Float64: Initial total doubly-bound crosslinkers\ninterval::Float64: Write inteval for mean and variance of stochastic simulations\nzeta::Float64: Friction coefficient\n\nParameters for actin-anillin ring system.\n\n\n\n\n\n","category":"type"},{"location":"#ActinFriction.R_to_lambda-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.R_to_lambda","text":"R_to_lambda(R, p::RingParams) -> Any\n\n\nConvert from ring radius to lambda.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.bending_force-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.bending_force","text":"bending_force(lambda, p::RingParams) -> Any\n\n\nCalculate current bending force on L in a ring.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.condensation_force-Tuple{RingParams}","page":"Home","title":"ActinFriction.condensation_force","text":"condensation_force(p::RingParams) -> Float64\n\n\nCalculate condenstation force on L in a ring.\n\nSince the condenstation force only depends on the total number of overlaps, it is constant as the ring constricts.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.entropic_force-Tuple{Any, Any, RingParams}","page":"Home","title":"ActinFriction.entropic_force","text":"entropic_force(lambda, Ndtot, p::RingParams) -> Any\n\n\nCalculate current entropic force on L for a ring.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.equilibrium_occupancy-Tuple{RingParams}","page":"Home","title":"ActinFriction.equilibrium_occupancy","text":"equilibrium_occupancy(p::RingParams) -> Float64\n\n\nCalculate the equilibrium occupancy.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.equilibrium_ring_radius-Tuple{RingParams}","page":"Home","title":"ActinFriction.equilibrium_ring_radius","text":"equilibrium_ring_radius(p::RingParams) -> Float64\n\n\nCalculate the equilibrium radius of a ring.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.force_L_to_R-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.force_L_to_R","text":"force_L_to_R(force, p::RingParams) -> Any\n\n\nConvert from force on L to force on R.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.free_energy_barrier_Nd_exact-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.free_energy_barrier_Nd_exact","text":"free_energy_barrier_Nd_exact(Nd, p::RingParams) -> Any\n\n\nCalculate free-energy barrier for the explicit-binding regime with exact friction.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.free_energy_barrier_Nd_exp-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.free_energy_barrier_Nd_exp","text":"free_energy_barrier_Nd_exp(Nd, p::RingParams) -> Any\n\n\nCalculate free-energy barrier for the explicit-binding regime with approximate friction.\n\nThe barrier to sliding a distance of deltas, in units of kbT.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.free_energy_barrier_cX-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.free_energy_barrier_cX","text":"free_energy_barrier_cX(l, p::RingParams) -> Any\n\n\nCalculate free-energy barrier for the fast-binding regime.\n\nThe barrier to sliding a distance of deltas, in units of kbT.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.friction_coefficient_Nd_exact-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.friction_coefficient_Nd_exact","text":"friction_coefficient_Nd_exact(\n    Nd,\n    p::RingParams\n) -> Vector{Any}\n\n\nCalculate friction coefficient in the explicit-binding regime with exact friction.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.friction_coefficient_Nd_exp-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.friction_coefficient_Nd_exp","text":"friction_coefficient_Nd_exp(Nd, p::RingParams) -> Any\n\n\nCalculate friction coefficient in the explicit-binding regime with approximate friction.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.friction_coefficient_cX-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.friction_coefficient_cX","text":"friction_coefficient_cX(lambda, p::RingParams) -> Any\n\n\nCalculate friction coefficient in the fast-binding regime.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.kramers_r0-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.kramers_r0","text":"kramers_r0(Nd, p::RingParams) -> Any\n\n\nCalculate jump rate prefactor from Kramers' theory.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.l_to_lambda-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.l_to_lambda","text":"l_to_lambda(l, p::RingParams) -> Any\n\n\nConvert from continuous number of sites in an overlap to lambda.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.lambda_to_R-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.lambda_to_R","text":"lambda_to_R(lambda, p::RingParams) -> Any\n\n\nConvert from lambda to ring radius.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.lambda_to_l-Tuple{Any, RingParams}","page":"Home","title":"ActinFriction.lambda_to_l","text":"lambda_to_l(lambda, p::RingParams) -> Any\n\n\nConvert from lambda to continuous number of sites in an overlap.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.savename-Tuple{Any, Any}","page":"Home","title":"ActinFriction.savename","text":"savename(\n    prefix,\n    params;\n    digits,\n    suffix,\n    ignored_fields\n) -> String\n\n\nGenerate file name from a set of parameters.\n\nThis is a replacement for the DrWatson function that has better handling of rounding and trailing zeros.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.solve_and_write_ring_Nd_contin_exp-NTuple{5, Any}","page":"Home","title":"ActinFriction.solve_and_write_ring_Nd_contin_exp","text":"solve_and_write_ring_Nd_contin_exp(\n    u0,\n    tspan,\n    p,\n    ifields,\n    filebase\n)\n\n\nSolve ring dynamics in the continuous explicit-binding regime with approximate friction.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.solve_and_write_ring_Nd_contin_exp_noise-NTuple{6, Any}","page":"Home","title":"ActinFriction.solve_and_write_ring_Nd_contin_exp_noise","text":"solve_and_write_ring_Nd_contin_exp_noise(\n    u0,\n    tspan,\n    trajs,\n    p,\n    ifields,\n    filebase\n)\n\n\nSolve ring dynamics in the continuous explicit-binding regime with approximate friction and noise.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.solve_and_write_ring_Nd_discrete_exact-NTuple{6, Any}","page":"Home","title":"ActinFriction.solve_and_write_ring_Nd_discrete_exact","text":"solve_and_write_ring_Nd_discrete_exact(\n    u0,\n    tspan,\n    trajs,\n    p,\n    ifields,\n    filebase\n)\n\n\nSolve ring dynamics in the discrete explicit-binding regime with exact friction.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.solve_and_write_ring_Nd_discrete_exact_noise-NTuple{6, Any}","page":"Home","title":"ActinFriction.solve_and_write_ring_Nd_discrete_exact_noise","text":"solve_and_write_ring_Nd_discrete_exact_noise(\n    u0,\n    tspan,\n    trajs,\n    p,\n    ifields,\n    filebase\n)\n\n\nSolve ring dynamics in the discrete explicit-binding regime with exact friction and noise.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.solve_and_write_ring_Nd_discrete_exp-NTuple{6, Any}","page":"Home","title":"ActinFriction.solve_and_write_ring_Nd_discrete_exp","text":"solve_and_write_ring_Nd_discrete_exp(\n    u0,\n    tspan,\n    trajs,\n    p,\n    ifields,\n    filebase\n)\n\n\nSolve ring dynamics in the discrete explicit-binding regime with approximate friction.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.solve_and_write_ring_Nd_discrete_exp_noise-NTuple{6, Any}","page":"Home","title":"ActinFriction.solve_and_write_ring_Nd_discrete_exp_noise","text":"solve_and_write_ring_Nd_discrete_exp_noise(\n    u0,\n    tspan,\n    trajs,\n    p,\n    ifields,\n    filebase\n)\n\n\nSolve ring dynamics in the discrete explicit-binding regime with approximate friction and noise.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.solve_and_write_ring_cX-NTuple{5, Any}","page":"Home","title":"ActinFriction.solve_and_write_ring_cX","text":"solve_and_write_ring_cX(u0, tspan, p, ifields, filebase)\n\n\nSolve ring dynamics in the fast-binding regime.\n\n\n\n\n\n","category":"method"},{"location":"#ActinFriction.solve_and_write_ring_cX_noise-NTuple{6, Any}","page":"Home","title":"ActinFriction.solve_and_write_ring_cX_noise","text":"solve_and_write_ring_cX_noise(\n    u0,\n    tspan,\n    trajs,\n    p,\n    ifields,\n    filebase\n)\n\n\nSolve ring dynamics in the fast-binding regime with noise.\n\n\n\n\n\n","category":"method"}]
}
